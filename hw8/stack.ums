// Comp40 Homework 8
// By: Josie Barth and Hongyan Wang
// April 23rd 2016

// Calling Convention
// r0 is always 0 (points to segment 0, used for goto and for the call stack) 
// r1 is the return-address register and the result register 
// r2 is the stack pointer and must have same value after return (nonvolatile) 
// r3, r4 are nonvolatiles
// r5 is a volatile register (often used to copy return address) 
// r6, r7 are volatile and are used as .temps 

#########################################################
#       set zero register and temporary registers
#########################################################
.section init
        .temps r6, r7
        r0 := 0
        .zero r0
        
#########################################################
#       call stack and value stack
#########################################################
.section stk
        output "in stk\n"
        .space 100000   // this is the callstack
        endstack:       // empty label, used for accessing callstack
        .space 10000    // this is the value_stack
        endvalue_stack: // empty label, used for accessing value stack 

########################################################
#reserve r2 for call stack, reserve r4 for value stack
########################################################
.section init
        r2 := endstack   // r2 points to the end of the callstack



